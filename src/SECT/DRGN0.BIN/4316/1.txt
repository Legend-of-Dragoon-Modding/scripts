entrypoint :ENTRYPOINT_0
entrypoint :ENTRYPOINT_1
entrypoint :ENTRYPOINT_2
entrypoint :ENTRYPOINT_3
data 0xf00ff2d
data 0x49
data 0x0
data 0x930238
data 0x2000000
data 0x2000008
data 0x20242
data 0x2000008
data 0x900fffc
data 0x49
data 0x0
data 0x930238
data 0x200001c
data 0x2000008
data 0x20242
data 0x2000008
data 0x900fffc
data 0x49
data 0x60341
data 0x1000000
data 0x40
data 0x3071c00
data 0x9000031
data 0xa90338
data 0x200001c
data 0x2
data 0x2000008
data 0x50242
data 0x2000008
data 0x9000028
data 0xa90338
data 0x200001c
data 0x6
data 0x2000009
data 0x221
data 0xa
data 0x2000009
data 0x50341
data 0x2000009
data 0x2000008
data 0x9000037
data 0xa90338
data 0x200001c
data 0x1000000
data 0x5
data 0x2000008
data 0x60341
data 0x1000000
data 0x40
data 0x2000008
data 0x9000023
data 0x60341
data 0x1000000
data 0x10
data 0x2000008
data 0x9000010
data 0x8f0238
data 0x200001c
data 0x2000008
data 0x20341
data 0x0
data 0x2000008
data 0x900002b
ENTRYPOINT_3:
call Battle::scriptSetLoadingBentAnimationIndex, stor[28], 0x0 ; bentIndex, animIndex
return
data 0x8f0238
data 0x200001c
data 0x2000008
data 0x20341
data 0xe
data 0x2000008
data 0x9000020
data 0x1420238
data 0x200001c
data 0xe
data 0x920238
data 0x200001c
data 0x0
data 0x49
data 0x8f0238
data 0x200001c
data 0x2000008
data 0x20341
data 0xa
data 0x2000008
data 0x9000012
data 0x1420238
data 0x200001c
data 0xa
data 0x49
data 0x8f0238
data 0x200001c
data 0x2000008
data 0x20341
data 0xb
data 0x2000008
data 0x9000007
data 0x1420238
data 0x200001c
data 0xb
data 0x49
data 0x49
data 0x162
data 0x2000008
data 0x162
data 0x200001c
data 0x162
data 0x200001e
data 0x0
data 0x70341
data 0x1000000
data 0x20
data 0x5000004
data 0x900fff9
data 0x49
data 0x1730338
data 0x200001c
data 0x200000a
data 0x0
data 0x208
data 0x2000008
data 0x10050a80
data 0xa80338
data 0x200001e
data 0x2000008
data 0x25
data 0x1ed0138
data 0x200001e
data 0x208
data 0x2000008
data 0xf00772d
data 0x1e00338
data 0x200001e
data 0x200001c
data 0x2000009
data 0x20242
data 0x2000009
data 0x9000008
data 0x148
data 0x900000a
data 0x148
data 0x9000037
data 0x49
data 0x208
data 0x1000000
data 0xffffffff
data 0x2000008
data 0x49
data 0xa90338
data 0x200001e
data 0x48
data 0x2000008
data 0x60341
data 0x80
data 0x2000008
data 0x900000a
data 0x1e10438
data 0x200001e
data 0x200001c
data 0x2000008
data 0x200000a
data 0x49
data 0x1ec0538
data 0x200001e
data 0x200001c
data 0xf00772d
data 0x2000008
data 0x200000a
data 0x49

; SUBROUTINE
LABEL_0:
call Battle::scriptSetBentStat, stor[30], stor[8], ITEM_ID ; bentIndex, value, statIndex
mov stor[8], var[45][119] ; source, dest
call Battle::scriptSetTempItemMagicStats, stor[30] ; bentIndex
call Battle::scriptItemMagicAttack, stor[30], stor[28], stor[8], stor[8], stor[10] ; attackerIndex, defenderIndex, unused, damage, specialEffects
gosub inl[:LABEL_1] ; addr
return
data 0x70341
data 0x1000000
data 0x1
data 0x5000003
data 0x9000007
data 0x10c
data 0x2000020
data 0x49

; SUBROUTINE
LABEL_1:
jmp_cmp !&, 0x1, var[3], inl[:LABEL_2] ; operand, left, right, addr
mov 0x0, stor[8] ; source, dest
LABEL_2:
return
data 0xa80338
data 0x200001e
data 0x2000008
data 0x25
data 0x1ed0138
data 0x200001e
data 0x208
data 0x2000008
data 0xf00772d
data 0x1e00338
data 0x200001e
data 0x200001c
data 0x2000009
data 0x20242
data 0x2000009
data 0x900002a
data 0x1730338
data 0x200001c
data 0x200000a
data 0x0
data 0x208
data 0x2000008
data 0x10050a80
data 0x208
data 0x2
data 0x10000a80
data 0x208
data 0x200001e
data 0x10030a80
data 0x208
data 0x2000008
data 0x10020a80
data 0xa90338
data 0x200001e
data 0x50
data 0x2000008
data 0x208
data 0x2000008
data 0x10010a80
data 0xa90338
data 0x200001e
data 0x51
data 0x2000008
data 0x208
data 0x2000008
data 0x10040a80
data 0x1ec0538
data 0x200001e
data 0x200001c
data 0xf00772d
data 0x2000008
data 0x200000a
data 0x148
data 0x900ffc4
data 0x49
data 0x208
data 0x1000000
data 0xffffffff
data 0x2000008
data 0x49
data 0x1730338
data 0x2000000
data 0x2000008
data 0x0
data 0x208
data 0x1
data 0x2000009
data 0x215
data 0x2000008
data 0x2000009
data 0x211
data 0x2000009
data 0xf00f62d
data 0x49
data 0x1730338
data 0x2000000
data 0x2000008
data 0x0
data 0x208
data 0x1
data 0x2000009
data 0x215
data 0x2000008
data 0x2000009
data 0x11d
data 0x2000009
data 0x11c
data 0x2000009
data 0x210
data 0x2000009
data 0xf00f62d
data 0x49
data 0x1730338
data 0x200001c
data 0x2000008
data 0x0
data 0x208
data 0x1
data 0x2000009
data 0x215
data 0x2000008
data 0x2000009
data 0x208
data 0xf00f62d
data 0x2000008
data 0x210
data 0x2000009
data 0x2000008
data 0x49
data 0x357
data 0x200001c
data 0xa
data 0x2000008
data 0x0
data 0x148
data 0x900ffea
data 0x30242
data 0x2000008
data 0x900fffd
data 0x49
data 0xa90338
data 0x200001c
data 0x2
data 0x200000a
data 0x218
data 0x2000008
data 0x200000a
data 0xa90338
data 0x200001c
data 0x6
data 0x2000009
data 0x50341
data 0x2000009
data 0x200000a
data 0x9000011
data 0xa90338
data 0x200001c
data 0x2
data 0x2000008
data 0x208
data 0x2000009
data 0x200000a
data 0x219
data 0x2000008
data 0x2000009
data 0x208
data 0x2000009
data 0x2000008
data 0xa50238
data 0x200001c
data 0x2000008
data 0xa80338
data 0x200001c
data 0x200000a
data 0x2
data 0x49
data 0xa90338
data 0x200001c
data 0x4
data 0x200000a
data 0x218
data 0x2000008
data 0x200000a
data 0xa90338
data 0x200001c
data 0x7
data 0x2000009
data 0x50341
data 0x2000009
data 0x200000a
data 0x9000011
data 0xa90338
data 0x200001c
data 0x4
data 0x2000008
data 0x208
data 0x2000009
data 0x200000a
data 0x219
data 0x2000008
data 0x2000009
data 0x208
data 0x2000009
data 0x2000008
data 0xa50238
data 0x200001c
data 0x2000008
data 0xa80338
data 0x200001c
data 0x200000a
data 0x4
data 0x49
data 0x1e70338
data 0x200001c
data 0x2000008
data 0x2000009
data 0xa50238
data 0x200001c
data 0x2000008
data 0x49
data 0x208
data 0x8
data 0x2000008
data 0x10341
data 0x8
data 0x2000008
data 0x900fffd
data 0x40242
data 0x2000008
data 0x900fff9
data 0x2590238
data 0x2000012
data 0xfff25
data 0x2210538
data 0x2000012
data 0x200001e
data 0x0
data 0x1000000
data 0xfffffc00
data 0x0
data 0x2250538
data 0x2000012
data 0x1000000
data 0xffffffff
data 0x500
data 0x500
data 0x500
data 0x2370838
data 0x2000012
data 0x2000012
data 0x0
data 0x1000000
data 0xfffffe00
data 0x1000000
data 0xfffffe00
data 0x0
data 0x0
data 0x0
data 0x2550638
data 0x2000012
data 0x200001c
data 0xf
data 0x0
data 0x1000000
data 0xfffffe00
data 0x0
data 0x2570538
data 0x2000012
data 0x1000000
data 0xffffffff
data 0x0
data 0x2000
data 0x0
data 0x2270538
data 0x2000012
data 0x1000000
data 0xffffffff
data 0xa080103
data 0xa08010c
data 0xa080115
data 0x24c0238
data 0x2000012
data 0xf
data 0x2ea0938
data 0x2000013
data 0x2000012
data 0xfff3e
data 0x20
data 0x40
data 0xc
data 0x200
data 0x0
data 0x37
data 0x2210538
data 0x2000013
data 0x200001e
data 0x0
data 0x1000000
data 0xfffffc00
data 0x0
data 0x2250538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x400
data 0x400
data 0x400
data 0x2550638
data 0x2000013
data 0x200001c
data 0xf
data 0x0
data 0x1000000
data 0xfffffe00
data 0x0
data 0x2570538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x0
data 0x2000
data 0x0
data 0x24c0238
data 0x2000013
data 0x20
data 0x2590238
data 0x2000013
data 0xfff17
data 0x2630338
data 0x2000013
data 0x2000012
data 0x1000000
data 0xffffffff
data 0x2210538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x0
data 0x1000000
data 0xfffffc00
data 0x0
data 0x2250538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x200
data 0x200
data 0x200
data 0x24c0238
data 0x2000013
data 0xf
data 0x2590238
data 0x2000013
data 0xfff18
data 0x2630338
data 0x2000013
data 0x2000012
data 0x1000000
data 0xffffffff
data 0x2210538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x0
data 0x1000000
data 0x400
data 0x0
data 0x2250538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x200
data 0x200
data 0x200
data 0x24c0238
data 0x2000013
data 0xf
data 0x2590238
data 0x2000013
data 0xfff17
data 0x2630338
data 0x2000013
data 0x2000012
data 0x1000000
data 0xffffffff
data 0x2210538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x0
data 0x0
data 0x1000000
data 0xfffffc00
data 0x2250538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x200
data 0x200
data 0x200
data 0x24c0238
data 0x2000013
data 0xf
data 0x2590238
data 0x2000013
data 0xfff18
data 0x2630338
data 0x2000013
data 0x2000012
data 0x1000000
data 0xffffffff
data 0x2210538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x0
data 0x0
data 0x400
data 0x2250538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x200
data 0x200
data 0x200
data 0x24c0238
data 0x2000013
data 0xf
data 0x208
data 0xf
data 0x2000017
data 0x102
data 0x2000017
data 0x2ea0938
data 0x2000013
data 0x2000012
data 0xfff17
data 0x4
data 0x200
data 0x2
data 0x200
data 0xc7f00
data 0x27
data 0x2210538
data 0x2000013
data 0x200001c
data 0x0
data 0x1000000
data 0xfffffe00
data 0x0
data 0x2250538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x200
data 0x200
data 0x200
data 0x24c0238
data 0x2000013
data 0x14
data 0x2ea0938
data 0x2000013
data 0x2000012
data 0xfff18
data 0x4
data 0x200
data 0x2
data 0x200
data 0xc7f00
data 0x27
data 0x2210538
data 0x2000013
data 0x200001c
data 0x0
data 0x1000000
data 0xfffffe00
data 0x0
data 0x2250538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x200
data 0x200
data 0x200
data 0x24c0238
data 0x2000013
data 0x14
data 0x2ea0938
data 0x2000013
data 0x2000012
data 0xfff25
data 0x10
data 0x200
data 0x2
data 0x200
data 0x1000000
data 0x40c7f00
data 0x27
data 0x2210538
data 0x2000013
data 0x200001c
data 0x0
data 0x1000000
data 0xfffffe00
data 0x0
data 0x2250538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0x300
data 0x300
data 0x300
data 0x2270538
data 0x2000013
data 0x1000000
data 0xffffffff
data 0xa080014
data 0xa08001d
data 0xa080026
data 0x2290338
data 0x2000013
data 0x0
data 0x1
data 0x24c0238
data 0x2000013
data 0x14
data 0x208
data 0x14
data 0x2000017
data 0x102
data 0x2000017
data 0x49
data 0xff
data 0x51
data 0x55
data 0xd8
data 0xe7
data 0xe8
data 0x10
data 0x0
data 0xf5
data 0x20
data 0xa6
data 0xc8
data 0xd4
data 0xe7
data 0xe0
data 0x10
data 0x0
data 0xff
data 0x0
data 0xe8
data 0x83
data 0x88
data 0x78
data 0x88
data 0xd8
data 0x0
data 0xd7
data 0x0
data 0x20242
data 0x5000035
data 0x900001c
data 0x10c
data 0x200001f
data 0x10c
data 0x2000009
data 0x208
data 0x7000934
data 0x200001c
data 0x148
data 0x900fe36
data 0x211
data 0x2000008
data 0x200001f
data 0x11b
data 0x2000009
data 0x10341
data 0x2000009
data 0x5000035
data 0x900fff6
data 0x162
data 0x200001f
data 0x30242
data 0x200001f
data 0x900ffe8
data 0x0
data 0x49
data 0x1
data 0x0
data 0x20242
data 0x5000033
data 0x900001c
data 0x10c
data 0x200001f
data 0x10c
data 0x2000009
data 0x208
data 0x7000932
data 0x200001c
data 0x148
data 0x900fe18
data 0x211
data 0x2000008
data 0x200001f
data 0x11b
data 0x2000009
data 0x10341
data 0x2000009
data 0x5000033
data 0x900fff6
data 0x162
data 0x200001f
data 0x30242
data 0x200001f
data 0x900ffe8
data 0x0
data 0x49
data 0x1
data 0x0
data 0x208
data 0xf00f62d
data 0x2000008
data 0x162
data 0x2000008
data 0x30242
data 0xf00f62d
data 0x900fffa
data 0x0
data 0x49
data 0x0
data 0x208
data 0x5000031
data 0x2000009
data 0x10c
data 0x200000a
data 0x10c
data 0x200000b
data 0x10c
data 0x200000c
data 0x10c
data 0x2000008
data 0x208
data 0x7000830
data 0x200000c
data 0x208
data 0x3070c00
data 0x200000a
data 0x210
data 0x1000000
data 0x200000
data 0x200000a
data 0x211
data 0x200000a
data 0x200000b
data 0x11b
data 0x2000008
data 0x40341
data 0x2000009
data 0x2000008
data 0x900fff1
data 0x30242
data 0x200000b
data 0x900ffe1
data 0x0
data 0x0
data 0x49
data 0x1730338
data 0x200001c
data 0x2000009
data 0x0
data 0x218
data 0x81
data 0x2000009
data 0x10c
data 0x700092d
data 0xa90338
data 0x200001c
data 0x1000000
data 0x5
data 0x2000008
data 0x210
data 0x1000000
data 0xffffff00
data 0x2000008
data 0xa80338
data 0x200001c
data 0x2000008
data 0x1000000
data 0x5
data 0x49

; SUBROUTINE
LABEL_3:
gosub inl[:LABEL_4] ; addr
gosub inl[:LABEL_38] ; addr
mov var[45][249], stor[8] ; source, dest
mov 0x0, stor[8] ; source, dest
mov 0x0, var[45][249] ; source, dest
wait_cmp ==, 0x0, var[45][248] ; operator, left, right
gosub inl[:LABEL_8] ; addr
gosub inl[:LABEL_6] ; addr
mov 0x4, var[25] ; source, dest
return

; SUBROUTINE
LABEL_4:
call Scus94491BpeSegment::scriptLoadMonsterAttackSounds, var[45][195] ; monsterIndex
LABEL_5:
call Scus94491BpeSegment::scriptGetLoadedSoundFiles, stor[23] ; flags
yield
jmp_cmp &, 0x20, stor[23], inl[:LABEL_5] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_6:
mov 0x0, var[45][120] ; source, dest
mov 0x0, var[45][121] ; source, dest
mov 0x0, var[45][122] ; source, dest
mov 0x0, var[45][123] ; source, dest
mov 0x0, var[45][124] ; source, dest
mov 0x0, var[45][125] ; source, dest
mov 0x0, var[45][126] ; source, dest
mov 0x0, var[45][127] ; source, dest
mov 0x0, var[45][144] ; source, dest
mov 0x0, var[45][145] ; source, dest
mov 0x0, var[45][146] ; source, dest
return

; SUBROUTINE TABLE
LABEL_7:
rel :JMP_ea0_0
rel :JMP_ea0_1
rel :JMP_ea0_0
rel :JMP_ea0_0
rel :JMP_ea0_0
rel :JMP_ea0_0
rel :JMP_ea0_0
rel :JMP_ea0_0

; SUBROUTINE
LABEL_8:
gosub_table stor[8], inl[:LABEL_7] ; index, table
return

; SUBROUTINE
JMP_ea0_0:
return

; SUBROUTINE
JMP_ea0_1:
gosub inl[:LABEL_27] ; addr
call SEffe::allocateDeffTmd, stor[21], 0x9920 ; effectIndex, flags
call SEffe::scriptSetRelativePosition, stor[21], stor[30], 0xfffffc18, 0xfffffe0c, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptSetRelativeRotation, stor[21], stor[30], 0x0, 0x400, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptAddRotationScalerAttachment, stor[21], stor[21], 0x0, 0x0, 0xa, 0x0, 0x0, 0x0 ; effectIndex, unused, velocityX, velocityY, velocityZ, accelerationX, accelerationY, accelerationZ
call SEffe::scriptSetEffectTranslucencySourceFlag, stor[21], 0x1 ; effectIndex, set
call SEffe::scriptSetRelativeScale, stor[21], 0xffffffff, 0x1400, 0x1400, 0x1400 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptAddScaleScalerAttachment, stor[21], 0x80, 0x80, 0x80, 0x0, 0x0, 0x0 ; effectIndex, velocityX, velocityY, velocityZ, accelerationX, accelerationY, accelerationZ
call SEffe::scriptAddConstantColourScalerAttachment, stor[21], 0xffffffff, 0xf, 0x0, 0x0, 0x0 ; effectIndex, parentIndex, ticks, destR, destG, destB
call SEffe::allocateDeffTmd, stor[20], 0x9920 ; effectIndex, flags
call SEffe::scriptSetRelativePosition, stor[20], stor[30], 0xfffffc18, 0xfffffe0c, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptSetRelativeRotation, stor[20], stor[30], 0x0, 0x400, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptAddRotationScalerAttachment, stor[20], stor[21], 0x0, 0x0, 0xfffffff6, 0x0, 0x0, 0x0 ; effectIndex, unused, velocityX, velocityY, velocityZ, accelerationX, accelerationY, accelerationZ
call SEffe::scriptSetEffectTranslucencySourceFlag, stor[20], 0x1 ; effectIndex, set
call SEffe::scriptSetRelativeScale, stor[20], 0xffffffff, 0x1400, 0x1400, 0x1400 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptAddScaleScalerAttachment, stor[20], 0x80, 0x80, 0x80, 0x0, 0x0, 0x0 ; effectIndex, velocityX, velocityY, velocityZ, accelerationX, accelerationY, accelerationZ
call SEffe::scriptAddConstantColourScalerAttachment, stor[20], 0xffffffff, 0xf, 0x0, 0x0, 0x0 ; effectIndex, parentIndex, ticks, destR, destG, destB
mov 0x14, stor[23] ; source, dest
wait stor[23] ; frames
return

; SUBROUTINE
LABEL_9:
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_27] ; addr
mov var[35], stor[23] ; source, dest
decr stor[23] ; operand
LABEL_10:
mov var[34][stor[23]], stor[8] ; source, dest
jmp_cmp ==, stor[30], stor[8], inl[:LABEL_11] ; operand, left, right, addr
decr stor[23] ; operand
jmp_cmp <=, 0x0, stor[23], inl[:LABEL_10] ; operand, left, right, addr
mov 0x1, stor[27] ; source, dest
LABEL_11:
return
data 0x10c
data 0x2000018
data 0x10c
data 0x200001a
data 0x148
data 0x900ffe3
data 0x30242
data 0x200001b
data 0x9000022
data 0x208
data 0x5000035
data 0x200000d
data 0x11c
data 0x200000d
data 0x810438
data 0x200001c
data 0x200000e
data 0x200000f
data 0x2000010
data 0x218
data 0x200000e
data 0x2000018
data 0x218
data 0x2000010
data 0x200001a
data 0x11c
data 0x200000d
data 0x242
data 0x200000d
data 0x900fff3
data 0x208
data 0x5000035
data 0x200000d
data 0x221
data 0x200000d
data 0x2000018
data 0x221
data 0x200000d
data 0x200001a
data 0x49
data 0x208
data 0x5000033
data 0x200000d
data 0x810438
data 0x200001c
data 0x200000e
data 0x200000f
data 0x2000010
data 0x218
data 0x200000e
data 0x2000018
data 0x218
data 0x2000010
data 0x200001a
data 0x11c
data 0x200000d
data 0x242
data 0x200000d
data 0x900fff3
data 0x208
data 0x5000033
data 0x200000d
data 0x221
data 0x200000d
data 0x2000018
data 0x221
data 0x200000d
data 0x200001a
data 0x219
data 0x200
data 0x2000018
data 0x49
data 0x30341
data 0x1
data 0x31f1d00
data 0x900000a
data 0x218
data 0x1e
data 0x2000017
data 0x208
data 0x0
data 0x31f1d00
data 0x49
data 0x2580138
data 0x200001d
data 0x26a0238
data 0x200001d
data 0x9000004
data 0x49
ENTRYPOINT_1:
mov 0x0, var[45][139] ; source, dest
mov 0x0, var[45][145] ; source, dest
mov 0x64, var[45][138] ; source, dest
mov 0x0, stor[31] ; source, dest
mov 0x0, stor[13] ; source, dest
mov 0x0, stor[11] ; source, dest
mov 0x64, var[45][138] ; source, dest
gosub inl[:LABEL_33] ; addr
gosub inl[:LABEL_9] ; addr
jmp_cmp ==, 0x0, stor[27], inl[:LABEL_12] ; operand, left, right, addr
mov 0x64, var[45][138] ; source, dest
deallocate
LABEL_12:
gosub inl[:LABEL_27] ; addr
call Battle::scriptGetBentStat, stor[28], _66, stor[16] ; bentIndex, statIndex, value
gosub inl[:LABEL_19] ; addr
mov 0x2, stor[31] ; source, dest
jmp_cmp >, 0xa, var[45][145], inl[:LABEL_13] ; operand, left, right, addr
mov 0x1, stor[31] ; source, dest
gosub inl[:LABEL_19] ; addr
LABEL_13:
gosub inl[:LABEL_18] ; addr
yield
jmp inl[:LABEL_13] ; addr
data 0x50

; SUBROUTINE
LABEL_14:
mov stor[9], stor[15] ; source, dest
mov stor[15], stor[14] ; source, dest
mod 0xa, stor[14] ; amount, operand
sub stor[14], stor[15] ; amount, operand
add 0x3, stor[14] ; amount, operand
call Battle::scriptRenderButtonPressHudElement, stor[14], 0x78, 0x32, 0x1, 0x80 ; type, x, y, translucency, brightness
mov stor[15], stor[14] ; source, dest
mod 0x64, stor[14] ; amount, operand
sub stor[14], stor[15] ; amount, operand
div 0xa, stor[14] ; amount, operand
add 0x3, stor[14] ; amount, operand
call Battle::scriptRenderButtonPressHudElement, stor[14], 0x70, 0x32, 0x1, 0x80 ; type, x, y, translucency, brightness
mov stor[15], stor[14] ; source, dest
mod 0x3e8, stor[14] ; amount, operand
div 0x64, stor[14] ; amount, operand
add 0x3, stor[14] ; amount, operand
call Battle::scriptRenderButtonPressHudElement, stor[14], 0x68, 0x32, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0xd, 0x80, 0x32, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x20, 0x68, 0x36, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x1e, 0x64, 0x36, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x1c, 0x68, 0x32, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x18, 0x64, 0x32, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x1a, 0x64, 0x3e, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x1d, 0x68, 0x3e, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x20, 0x70, 0x36, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x1d, 0x70, 0x3e, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x1c, 0x70, 0x32, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x20, 0x78, 0x36, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x1d, 0x78, 0x3e, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x1c, 0x78, 0x32, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x20, 0x80, 0x36, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x1d, 0x80, 0x3e, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x1c, 0x80, 0x32, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x1f, 0x8c, 0x36, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x19, 0x8c, 0x32, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x1b, 0x8c, 0x3e, 0x1, 0x80 ; type, x, y, translucency, brightness
return

; SUBROUTINE
LABEL_15:
jmp_cmp !&, 0x1, stor[23], inl[:LABEL_16] ; operand, left, right, addr
call Battle::scriptRenderButtonPressHudElement, 0x24, 0x50, 0x2e, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x21, 0x4c, 0x32, 0x1, 0x80 ; type, x, y, translucency, brightness
jmp inl[:LABEL_17] ; addr
LABEL_16:
call Battle::scriptRenderButtonPressHudElement, 0x24, 0x50, 0x2a, 0x1, 0x80 ; type, x, y, translucency, brightness
call Battle::scriptRenderButtonPressHudElement, 0x23, 0x4c, 0x32, 0x1, 0x80 ; type, x, y, translucency, brightness
LABEL_17:
return

; SUBROUTINE
LABEL_18:
gosub inl[:LABEL_27] ; addr
mov var[45][145], stor[8] ; source, dest
gosub inl[:LABEL_31] ; addr
mov stor[9], var[45][138] ; source, dest
return

; SUBROUTINE
LABEL_19:
mov 0x1e, stor[23] ; source, dest
LABEL_20:
mov 0x0, stor[24] ; source, dest
gosub inl[:LABEL_25] ; addr
jmp_cmp !=, 0x0, stor[27], inl[:LABEL_22] ; operand, left, right, addr
jmp_cmp <=, 0x0, var[45][145], inl[:LABEL_21] ; operand, left, right, addr
mov 0x0, var[45][145] ; source, dest
LABEL_21:
jmp inl[:LABEL_23] ; addr
LABEL_22:
sub stor[10], var[45][145] ; amount, operand
jmp_cmp <=, 0x0, var[45][145], inl[:LABEL_23] ; operand, left, right, addr
mov 0x0, var[45][145] ; source, dest
LABEL_23:
gosub inl[:LABEL_15] ; addr
jmp_cmp ==, 0x0, stor[13], inl[:LABEL_24] ; operand, left, right, addr
gosub inl[:LABEL_14] ; addr
LABEL_24:
gosub inl[:LABEL_34] ; addr
yield
while stor[23], inl[:LABEL_20] ; counter, addr
return
data 0x30242
data 0x2000011
data 0x9000012
data 0x208
data 0xa
data 0x2000011
data 0x10c
data 0x200000b
data 0x231
data 0x64
data 0x200000c
data 0x341
data 0x32
data 0x200000c
data 0x900000a
data 0x208
data 0x1
data 0x200000b
data 0x20242
data 0x200000b
data 0x9000003
data 0x11c
data 0x2000011
data 0x49

; SUBROUTINE
LABEL_25:
jmp_cmp !&, 0x20, var[4], inl[:LABEL_26] ; operand, left, right, addr
incr var[45][145] ; operand
mov 0x1, stor[13] ; source, dest
mov var[45][145], stor[24] ; source, dest
call Battle::scriptRenderButtonPressHudElement, 0x14, 0x4c, 0x2e, 0x1, 0x80 ; type, x, y, translucency, brightness
gosub inl[:LABEL_18] ; addr
LABEL_26:
return

; SUBROUTINE
LABEL_27:
call Battle::FUN_800e74ac, stor[30], stor[28] ; bentIndex, p1
jmp_cmp !=, 0xffffffff, stor[28], inl[:LABEL_28] ; operand, left, right, addr
mov var[36][0], stor[28] ; source, dest
LABEL_28:
jmp_cmp !=, 0xfffffffe, stor[28], inl[:LABEL_29] ; operand, left, right, addr
mov var[34][0], stor[28] ; source, dest
LABEL_29:
return

; SUBROUTINE TABLE
LABEL_30:
rel :JMP_183c_0
rel :JMP_183c_1
rel :JMP_183c_2
rel :JMP_183c_3
rel :JMP_183c_4
rel :JMP_183c_5
rel :JMP_183c_6
rel :JMP_183c_7
rel :JMP_183c_8
rel :JMP_183c_9
rel :JMP_183c_10

; SUBROUTINE
LABEL_31:
gosub_table stor[16], inl[:LABEL_30] ; index, table
return

; SUBROUTINE
JMP_183c_0:
mov 0x64, stor[9] ; source, dest
return

; SUBROUTINE
JMP_183c_1:
mov 0x64, stor[9] ; source, dest
add stor[8], stor[9] ; amount, operand
return

; SUBROUTINE
JMP_183c_2:
mov stor[8], stor[9] ; source, dest
mul 0x2, stor[9] ; amount, operand
add 0x64, stor[9] ; amount, operand
return

; SUBROUTINE
JMP_183c_3:
mov stor[8], stor[9] ; source, dest
mul 0x3, stor[9] ; amount, operand
add 0x64, stor[9] ; amount, operand
return

; SUBROUTINE
JMP_183c_4:
mov stor[8], stor[9] ; source, dest
mul 0x4, stor[9] ; amount, operand
add 0x64, stor[9] ; amount, operand
return

; SUBROUTINE
JMP_183c_5:
mov stor[8], stor[9] ; source, dest
mul 0x5, stor[9] ; amount, operand
add 0x64, stor[9] ; amount, operand
return

; SUBROUTINE
JMP_183c_6:
mov stor[8], stor[9] ; source, dest
mul 0xa, stor[9] ; amount, operand
add 0x64, stor[9] ; amount, operand
return

; SUBROUTINE
JMP_183c_7:
mov stor[8], stor[9] ; source, dest
mul 0x14, stor[9] ; amount, operand
add 0x64, stor[9] ; amount, operand
return

; SUBROUTINE
JMP_183c_8:
mov stor[8], stor[9] ; source, dest
mul stor[8], stor[9] ; amount, operand
div 0xa, stor[9] ; amount, operand
add 0x64, stor[9] ; amount, operand
return

; SUBROUTINE
JMP_183c_9:
mov stor[8], stor[9] ; source, dest
mul stor[8], stor[9] ; amount, operand
div 0x5, stor[9] ; amount, operand
add 0x64, stor[9] ; amount, operand
return

; SUBROUTINE
JMP_183c_10:
mov stor[8], stor[9] ; source, dest
mul stor[8], stor[9] ; amount, operand
div 0x2, stor[9] ; amount, operand
add 0x64, stor[9] ; amount, operand
return
data 0x148
data 0x900fd9a
data 0x30242
data 0x200001b
data 0x9000025
data 0x208
data 0x5000035
data 0x200000d
data 0x11c
data 0x200000d
data 0x208
data 0x7000d34
data 0x200001c
data 0x208
data 0xf008a2d
data 0x2000011
data 0x208
data 0xf00c42d
data 0x2000008
data 0x148
data 0x90000c0
data 0x148
data 0x900fa0e
data 0x220
data 0x2000011
data 0x2000008
data 0x221
data 0x64
data 0x2000008
data 0x357
data 0x200001c
data 0x2
data 0x2000008
data 0x11c
data 0x200000d
data 0x242
data 0x200000d
data 0x900ffe7
data 0x49
data 0x208
data 0x5000033
data 0x200000d
data 0x11c
data 0x200000d
data 0x208
data 0x7000d32
data 0x200001c
data 0x208
data 0xf008a2d
data 0x2000011
data 0x208
data 0xf00c42d
data 0x2000008
data 0x148
data 0x900009e
data 0x148
data 0x900f9ec
data 0x220
data 0x2000011
data 0x2000008
data 0x221
data 0x64
data 0x2000008
data 0x357
data 0x200001c
data 0x2
data 0x2000008
data 0x11c
data 0x200000d
data 0x242
data 0x200000d
data 0x900ffe7
data 0x49
data 0x148
data 0x900ff26
data 0x208
data 0xf008a2d
data 0x2000011
data 0x208
data 0xf00c42d
data 0x2000008
data 0x148
data 0x9000082
data 0x148
data 0x900f9d0
data 0x220
data 0x2000011
data 0x2000008
data 0x221
data 0x64
data 0x2000008
data 0x357
data 0x200001c
data 0x2
data 0x2000008
data 0x49

; SUBROUTINE
LABEL_32:
mov 0xffffffff, var[45][249] ; source, dest
mov 0x21, var[44] ; source, dest
mov 0x3, var[25] ; source, dest
call Scus94491BpeSegment::scriptStopSound, 0xa, 0x0, 0x3 ; soundFileIndex, soundIndex, mode
call Scus94491BpeSegment::scriptStopSound, 0xa, 0x1, 0x3 ; soundFileIndex, soundIndex, mode
call Scus94491BpeSegment::scriptStopSound, 0xa, 0x2, 0x3 ; soundFileIndex, soundIndex, mode
yield
call Scus94491BpeSegment::scriptUnloadSoundFile, 0x6 ; soundType
yield
deallocate
data 0x49

; SUBROUTINE
LABEL_33:
mov 0x58, var[44] ; source, dest
gosub inl[:LABEL_27] ; addr
mov stor[30], var[80] ; source, dest
mov stor[28], var[81] ; source, dest
return

; SUBROUTINE
LABEL_34:
jmp_cmp !&, 0x20, var[4], inl[:LABEL_37] ; operand, left, right, addr
jmp_cmp !=, 0xa, var[45][145], inl[:LABEL_35] ; operand, left, right, addr
incr var[89] ; operand
LABEL_35:
jmp_cmp !=, 0x14, var[45][145], inl[:LABEL_36] ; operand, left, right, addr
incr var[89] ; operand
LABEL_36:
jmp_cmp !=, 0x1e, var[45][145], inl[:LABEL_37] ; operand, left, right, addr
incr var[89] ; operand
LABEL_37:
return
data 0x2580138
data 0x2000012
data 0x26a0238
data 0x2000012
data 0x9000004
data 0x49
data 0x208
data 0x3c
data 0x2000017
data 0x10c
data 0x2000011
data 0x208
data 0xf00912d
data 0x2000009
data 0x70341
data 0x1000000
data 0x20
data 0x5000004
data 0x9000020
data 0x30341
data 0xf
data 0x2000009
data 0x900000b
data 0xec0638
data 0xa
data 0x1
data 0x0
data 0x0
data 0x0
data 0x0
data 0x70341
data 0x1000000
data 0x20
data 0x5000004
data 0x9000010
data 0x30341
data 0x19
data 0x2000009
data 0x900000b
data 0xec0638
data 0xa
data 0x2
data 0x0
data 0x0
data 0x0
data 0x0
data 0x0
data 0x243
data 0x2000017
data 0x900ffdc
data 0x50
data 0x219
data 0xc0
data 0x2000008
data 0x49
data 0x148
data 0x900fd2f
data 0x208
data 0x1e
data 0x2000017
data 0x102
data 0x2000017
data 0x50341
data 0xa
data 0xf00912d
data 0x9000009
data 0x208
data 0x1e
data 0x2000017
data 0x102
data 0x2000017
data 0x208
data 0x101
data 0xf00902d
data 0x20203
data 0x100
data 0xf00902d
data 0x208
data 0x1000000
data 0xffffffff
data 0xf00f92d
data 0x208
data 0x21
data 0x500002c
data 0x208
data 0x3
data 0x5000019
data 0xed0338
data 0xa
data 0x0
data 0x3
data 0xed0338
data 0xa
data 0x1
data 0x3
data 0xed0338
data 0xa
data 0x2
data 0x3
data 0x0
data 0xe80138
data 0x6
data 0x0
data 0x50
data 0x20203
data 0x101
data 0xf00902d
data 0x49
data 0x208
data 0x100
data 0xf00902d
data 0x1

; SUBROUTINE
LABEL_38:
return
ENTRYPOINT_0:
mov 0xe, var[45][195] ; source, dest
mov 0xc4, var[45][196] ; source, dest
gosub inl[:LABEL_3] ; addr
mov 0x1, stor[14] ; source, dest
call Battle::FUN_800e74ac, stor[30], stor[28] ; bentIndex, p1
call Battle::scriptAllocateEmptyEffectManagerChild, stor[18] ; effectIndex
call SEffe::scriptLoadSameScriptAndJump, stor[18], inl[:ENTRYPOINT_2] ; scriptIndex, address
yield
call Battle::allocateBillboardSpriteEffect, stor[19], 0x1304 ; effectIndex, flags
call SEffe::scriptSetRelativePosition, stor[19], stor[28], 0x0, 0xfffffc00, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptSetEffectZ, stor[19], 0xfffffe00 ; effectIndex, z
call SEffe::scriptSetRelativeScale, stor[19], 0xffffffff, 0x0, 0x0, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptSetRelativeColour, stor[19], 0xffffffff, 0x0, 0x0, 0x0 ; bobjIndex1, bobjIndex2, r, g, b
call SEffe::scriptAddConstantColourScalerAttachment, stor[19], 0xffffffff, 0x14, 0x64, 0x64, 0x50 ; effectIndex, parentIndex, ticks, destR, destG, destB
call SEffe::scriptAddRotationScalerAttachment, stor[19], 0xffffffff, 0x0, 0x0, 0xc8, 0x0, 0x0, 0x0 ; effectIndex, unused, velocityX, velocityY, velocityZ, accelerationX, accelerationY, accelerationZ
call SEffe::scriptAddScaleScalerMultiplicativeAttachmentTicks, stor[19], 0xffffffff, 0x14, 0x1c2, 0x1c2, 0x1c2 ; effectIndex, parentIndex, ticks, x, y, z
yield
call Battle::allocateBillboardSpriteEffect, stor[21], 0x1303 ; effectIndex, flags
call SEffe::scriptSetRelativePosition, stor[21], stor[28], 0x0, 0xfffffc00, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptSetEffectZ, stor[21], 0xfffffe00 ; effectIndex, z
call SEffe::scriptSetRelativeScale, stor[21], 0xffffffff, 0x0, 0x0, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptSetRelativeColour, stor[21], 0xffffffff, 0x0, 0x0, 0x0 ; bobjIndex1, bobjIndex2, r, g, b
call SEffe::scriptAddScaleScalerMultiplicativeAttachmentTicks, stor[21], 0xffffffff, 0x14, 0x200, 0x200, 0x200 ; effectIndex, parentIndex, ticks, x, y, z
call SEffe::scriptAddRotationScalerAttachment, stor[21], 0xffffffff, 0x0, 0x0, 0xc8, 0x0, 0x0, 0x0 ; effectIndex, unused, velocityX, velocityY, velocityZ, accelerationX, accelerationY, accelerationZ
call SEffe::scriptAddConstantColourScalerAttachment, stor[21], 0xffffffff, 0x14, 0x0, 0x0, 0x64 ; effectIndex, parentIndex, ticks, destR, destG, destB
call SEffe::scriptAllocateParticleEffect, stor[18], stor[28], 0x4003, 0xa, 0x9c4, 0x14, 0x150, 0x0, 0x12 ; effectIndex, parentIndex, type, count, p4, p5, p6, p7, type2
call SEffe::scriptSetRelativeScale, stor[18], 0xffffffff, 0x100, 0x100, 0x100 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptSetRelativePosition, stor[18], stor[28], 0x0, 0x0, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
yield
mov 0x14, stor[23] ; source, dest
wait stor[23] ; frames
mov 0x14, stor[23] ; source, dest
LABEL_39:
mov 0x28, stor[10] ; source, dest
mul 0x14, stor[10] ; amount, operand
add 0x1c2, stor[10] ; amount, operand
mov 0x23, stor[11] ; source, dest
sub stor[23], stor[11] ; amount, operand
call SEffe::scriptAddScaleScalerMultiplicativeAttachmentTicks, stor[19], 0xffffffff, stor[11], stor[10], stor[10], stor[10] ; effectIndex, parentIndex, ticks, x, y, z
mov 0x28, stor[10] ; source, dest
mul 0x33, stor[10] ; amount, operand
add 0x200, stor[10] ; amount, operand
call SEffe::scriptAddScaleScalerMultiplicativeAttachmentTicks, stor[21], 0xffffffff, stor[11], stor[10], stor[10], stor[10] ; effectIndex, parentIndex, ticks, x, y, z
yield
while stor[23], inl[:LABEL_39] ; counter, addr
jmp_cmp >=, 0x9, var[45][137], inl[:LABEL_41] ; operand, left, right, addr
mov 0x28, stor[9] ; source, dest
mul 0x2, stor[9] ; amount, operand
call SEffe::scriptAllocateParticleEffect, stor[22], stor[28], 0x4003, stor[9], 0x9c4, 0x14, 0x100, 0x0, 0x12 ; effectIndex, parentIndex, type, count, p4, p5, p6, p7, type2
call SEffe::scriptSetRelativeScale, stor[22], 0xffffffff, 0x190, 0x190, 0x190 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptSetRelativePosition, stor[22], stor[28], 0x0, 0x0, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
mov 0xa, stor[23] ; source, dest
LABEL_40:
mov 0x28, stor[10] ; source, dest
mul 0xa, stor[10] ; amount, operand
add 0x258, stor[10] ; amount, operand
mov 0x23, stor[11] ; source, dest
sub stor[23], stor[11] ; amount, operand
call SEffe::scriptAddScaleScalerMultiplicativeAttachmentTicks, stor[19], 0xffffffff, stor[11], stor[10], stor[10], stor[10] ; effectIndex, parentIndex, ticks, x, y, z
mov 0x1e, stor[10] ; source, dest
mul 0x46, stor[10] ; amount, operand
add 0x2bc, stor[10] ; amount, operand
call SEffe::scriptAddScaleScalerMultiplicativeAttachmentTicks, stor[21], 0xffffffff, stor[11], stor[10], stor[10], stor[10] ; effectIndex, parentIndex, ticks, x, y, z
yield
while stor[23], inl[:LABEL_40] ; counter, addr
LABEL_41:
mov 0x7, stor[23] ; source, dest
wait stor[23] ; frames
call Battle::allocateBillboardSpriteEffect, stor[20], 0x1304 ; effectIndex, flags
call SEffe::scriptSetRelativePosition, stor[20], stor[28], 0x0, 0xfffffc00, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptSetEffectZ, stor[20], 0xfffffc00 ; effectIndex, z
call SEffe::scriptSetRelativeScale, stor[20], 0xffffffff, 0x3e8, 0x3e8, 0x3e8 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptAddScaleScalerAttachment, stor[20], 0x10e, 0x10e, 0x10e, 0xffffffe2, 0xffffffe2, 0xffffffe2 ; effectIndex, velocityX, velocityY, velocityZ, accelerationX, accelerationY, accelerationZ
call SEffe::scriptSetRelativeColour, stor[20], 0xffffffff, 0x0, 0x0, 0x0 ; bobjIndex1, bobjIndex2, r, g, b
call SEffe::scriptAddRotationScalerAttachment, stor[20], 0xffffffff, 0x0, 0x0, 0xc8, 0x0, 0x0, 0x0 ; effectIndex, unused, velocityX, velocityY, velocityZ, accelerationX, accelerationY, accelerationZ
yield
call Battle::allocateBillboardSpriteEffect, stor[22], 0x1303 ; effectIndex, flags
call SEffe::scriptSetRelativePosition, stor[22], stor[28], 0x0, 0xfffffc00, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptSetEffectZ, stor[22], 0xfffffc00 ; effectIndex, z
call SEffe::scriptSetRelativeScale, stor[22], 0xffffffff, 0x0, 0x0, 0x0 ; bobjIndex1, bobjIndex2, x, y, z
call SEffe::scriptAddScaleScalerAttachment, stor[22], 0x10e, 0x10e, 0x10e, 0xffffffe2, 0xffffffe2, 0xffffffe2 ; effectIndex, velocityX, velocityY, velocityZ, accelerationX, accelerationY, accelerationZ
call SEffe::scriptSetRelativeColour, stor[22], 0xffffffff, 0x0, 0x0, 0x0 ; bobjIndex1, bobjIndex2, r, g, b
call SEffe::scriptAddRotationScalerAttachment, stor[22], 0xffffffff, 0x0, 0x0, 0xd2, 0x0, 0x0, 0x0 ; effectIndex, unused, velocityX, velocityY, velocityZ, accelerationX, accelerationY, accelerationZ
call SEffe::scriptAddConstantColourScalerAttachment, stor[20], 0xffffffff, 0x5, 0x64, 0x50, 0x28 ; effectIndex, parentIndex, ticks, destR, destG, destB
call SEffe::scriptAddConstantColourScalerAttachment, stor[22], 0xffffffff, 0x5, 0x28, 0x28, 0x28 ; effectIndex, parentIndex, ticks, destR, destG, destB
mov 0x5, stor[23] ; source, dest
wait stor[23] ; frames
mov 0x28, stor[9] ; source, dest
shl 0x2, stor[9] ; shift, val
call SEffe::scriptAddScaleScalerMultiplicativeAttachmentTicks, stor[19], 0xffffffff, 0x12, 0x1000, 0x1000, 0x1000 ; effectIndex, parentIndex, ticks, x, y, z
call SEffe::scriptAddConstantColourScalerAttachment, stor[19], 0xffffffff, 0x12, 0x0, 0x0, 0x0 ; effectIndex, parentIndex, ticks, destR, destG, destB
call SEffe::scriptAddConstantColourScalerAttachment, stor[20], 0xffffffff, 0x12, 0x0, 0x0, 0x0 ; effectIndex, parentIndex, ticks, destR, destG, destB
call SEffe::scriptAddScaleScalerMultiplicativeAttachmentTicks, stor[21], 0xffffffff, 0x12, 0x1000, 0x1000, 0x1000 ; effectIndex, parentIndex, ticks, x, y, z
call SEffe::scriptAddConstantColourScalerAttachment, stor[21], 0xffffffff, 0x12, 0x0, 0x0, 0x0 ; effectIndex, parentIndex, ticks, destR, destG, destB
call SEffe::scriptAddConstantColourScalerAttachment, stor[22], 0xffffffff, 0x12, 0x0, 0x0, 0x0 ; effectIndex, parentIndex, ticks, destR, destG, destB
yield
mov var[45][196], stor[8] ; source, dest
gosub inl[:LABEL_0] ; addr
mov stor[8], stor[10] ; source, dest
call Battle::scriptGetBentStat, stor[28], CURRENT_HP, stor[8] ; bentIndex, statIndex, value
call Battle::scriptGetBentStat, stor[28], MAX_HP, stor[24] ; bentIndex, statIndex, value
div 0x4, stor[10] ; amount, operand
add stor[10], stor[8] ; amount, operand
jmp_cmp >=, stor[24], stor[8], inl[:LABEL_42] ; operand, left, right, addr
sub stor[24], stor[8] ; amount, operand
sub stor[8], stor[10] ; amount, operand
mov stor[24], stor[8] ; source, dest
LABEL_42:
call Battle::scriptRenderDamage, stor[28], stor[10] ; bentIndex, damage
call Battle::scriptSetBentStat, stor[28], stor[8], CURRENT_MP ; bentIndex, value, statIndex
mov 0x1e, stor[23] ; source, dest
wait stor[23] ; frames
gosub inl[:LABEL_32] ; addr
deallocate
data 0x58

; FORK JMP
ENTRYPOINT_2:
mov 0x50, stor[23] ; source, dest
mov 0x0, stor[17] ; source, dest
call Scus94491BpeSegment::scriptPlaySound, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
LABEL_43:
mov var[45][137], stor[9] ; source, dest
jmp_cmp !&, 0x20, var[4], inl[:LABEL_45] ; operand, left, right, addr
jmp_cmp >, 0x14, stor[23], inl[:LABEL_44] ; operand, left, right, addr
jmp_cmp !=, 0xb, stor[9], inl[:LABEL_44] ; operand, left, right, addr
call Scus94491BpeSegment::scriptPlaySound, 0xa, 0x1, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
LABEL_44:
jmp_cmp !&, 0x20, var[4], inl[:LABEL_45] ; operand, left, right, addr
jmp_cmp !=, 0x14, stor[9], inl[:LABEL_45] ; operand, left, right, addr
call Scus94491BpeSegment::scriptPlaySound, 0xa, 0x2, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
LABEL_45:
yield
while stor[23], inl[:LABEL_43] ; counter, addr
deallocate
